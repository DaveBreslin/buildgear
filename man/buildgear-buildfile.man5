.TH "Buildgear buildfile" 5 "<===VERSION===>" "<===DATE===>" "Buildgear"

.SH NAME
buildgear_Buildfile \- Buildfile to describe build procedure

.SH DESCRIPTION
Buildfiles describe how a specific build in Buildgear is built. Buildfiles should be located in a folder that describes the builds. Buildfiles for native builds should be located in the \fIbuildfiles/native\fR path, and the cross builds should be located in the \fIbuildfiles/cross\fR path. The depth of the path can be as deep as you like. An example:

.RS
\fIbuildfiles/cross/cross-extra/MesaLib/Buildfile\fR
.RE

The Buildfile contains variables to describe the build, and functions to facilitate building the build.
.PP

A buildfile configuration file is used to provide various variables and functions to the buildfiles. See \fBbuildgear.buildfileconfig\fR(5).

.SH VARIABLES
The following variables are used in the Buildfile

.TP
.B name
.RS
The name of the build. This is the identifier used as argument to the buildgear commands. The name is also used in the name of the resulting package tar archive. The package tar archives are used internally by buildgear to populate sysroots during builds.
.RE

.TP
.B version
.RS
The version of the build. This is reported by the \fBbuildgear show --version \fR<\fIbuild name\fR> command. Furthermore, the version is used in the name of the resulting package tar archive.
.RE

.TP
.B release
.RS
The release identifier of the Buildgear distribution. This identifier will be used in the name of the resulting package tar archive.
.RE

.TP
.B source
.RS
List of sources needed in the build procedure. Sources can be remote (protocols supported by your curl installation, i.e. http://, ftp://, https://, ftps://), or it can be locale, relative to the location of the Builfile. If the source is an archive, it is automatically extracted.
.RE

.TP
.B depends
.RS
List of Buildgear builds that is needed by the build. These builds will be added to the sysroot before building of the selected build is started. Both compile-time and run-time dependencies can be specified. If the build dependency is in the native branch, the name of the build must be given as \fInative/<build name>\fR.
.RE

.TP
.B options
.RS
List of special options. Supported options are:
.TP
.B build-lock
.RS
Locks the build so that it will be the only one building at any given time (even when parallel_builds > 1).
.RE

.RE

.SH FUNCTIONS

.TP
.B build()
.RS
This function is called by the Buildgear tool, when the building the build. This function will normally contain the usual \fB./configure, make, make install\fR circus. Some environment variables are accessible in this function. The most important are:

.TP
.B SRC
.RS
The path of the directory where the sources are extracted
.RE

.TP
.B PKG
.RS
The path of the directory where the files that should be included in the resulting tar archive is located.
.RE

.TP
.B BUILD
.RS
The build system tuple
.RE

.TP
.B HOST
.RS
The host system tuple
.RE

.RE

.TP
.B check()
.RS
This function is called by the Buildgear tool to check if the pacakage can be built. This function will normally check if required tools on the build system is present.
.RE

.SH EXAMPLE

The example is taken from cross-extra/Mesalib
.PP
 
 # Description: The Mesa 3D Graphics Library
 # URL: http://www.mesa3d.org
 
 name=MesaLib
 version=8.0.4
 release=1
 source=(ftp://ftp.freedesktop.org/pub/mesa/$version/$name-$version.tar.bz2
         0001-Don-t-cross-compile-src-glsl-builtin_compiler.patch)
 depends=(libX11 xextproto libXext)
 
 build() {
    cd Mesa-$version

    patch -p1 < $SRC/0001-Don-t-cross-compile-src-glsl-builtin_compiler.patch
    NOCONFIGURE=1 ./autogen.sh

    ./configure --build=$BUILD \\
                --host=$HOST \\
                --prefix=/usr \\
                --with-dri-drivers=swrast

    make -j $JOBS
    make DESTDIR=$PKG install

    # Fix libtool files
    fix_la_files $PKG
 }

 check() {
    check_tool makedepend
    check_tool python2
    check_tool autoreconf
    check_tool automake
    check_tool aclocal
    check_lib /usr/share/pyshared/libxml2.py
 }

.SH AUTHOR
<===AUTHOR===>

.SH SEE ALSO
\fBbuildgear\fR(1)
